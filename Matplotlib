import numpy as np
In [ ]:
import numpy
In [ ]:
arr = numpy.array([1,2,3,4,5])
#array object: ndarray 1d
In [ ]:
print(arr)
print(type(arr))
[1 2 3 4 5]
<class 'numpy.ndarray'>
In [ ]:
import numpy as np

arr = np.array((1, 2, 3, 4, 5))

print(arr)

#tuple
[1 2 3 4 5]
In [ ]:
import numpy as np

arr = np.array(42)

print(arr)

#0-d dimensions
42
In [ ]:
import numpy as np

arr = np.array([[1, 2, 3], [4, 5, 6]])

print(arr)

#matrix operations= 2D (2arrays)
[[1 2 3]
 [4 5 6]]
In [ ]:
import numpy as np 

arr = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])

print(arr)

#3d array with 2d both with two arrays 
[[[1 2 3]
  [4 5 6]]

 [[1 2 3]
  [4 5 6]]]
In [ ]:
import numpy as np

a = np.array(42)
b = np.array([1, 2, 3, 4, 5])
c = np.array([[1, 2, 3], [4, 5, 6]])
d = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])

print(a.ndim) 
print(b.ndim) 
print(c.ndim) 
print(d.ndim)
0
1
2
3
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)
print('number of dimensions :', arr.ndim)
[[[[[1 2 3 4]]]]]
number of dimensions : 5
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4])

print(arr[0])

#indexes start with 0 then second is 1 
1
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4])

print(arr[1])

#second element
2
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4])

print(arr[2] + arr[3])

#second element and 3rd added
7
In [ ]:
import numpy as np

arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('2nd element on 1st row: ', arr[0, 1])
2nd element on 1st row:  2
In [ ]:
import numpy as np

arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('5th element on 2nd row: ', arr[1, 4])
5th element on 2nd row:  10
In [ ]:
import numpy as np

arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])

print(arr[0, 1, 2])
6
In [ ]:
import numpy as np

arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('Last element from 2nd dim: ', arr[1, -1])
Last element from 2nd dim:  10
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[1:5])

#from elemnt 1 to 5
[2 3 4 5]
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[4:])

#from element 4 onwards
[5 6 7]
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[:4])

#from elemt 4 and backwards
[1 2 3 4]
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[-3:-1])

#from the index 3 from the end to index 1 from the end
[5 6]
In [ ]:
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[1:5:2])
[2 4]
In [ ]:
import numpy as np
arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[::2])

#Return every other element from the entire array
[1 3 5 7]
In [ ]:
import numpy as np

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[1, 1:4])

#From the second element, slice elements from index 1 to index 4
[7 8 9]
In [ ]:
import numpy as np

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 2])

#From both elements, return index 2:
[3 8]
In [ ]:
import numpy as np

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 1:4])

#From both elements, slice index 1 to index 4 (not included), this will return a 2-D array
[[2 3 4]
 [7 8 9]]
